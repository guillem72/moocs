Computer Science: Software Engineering, Statistics and Data Analysis The syllabus is optimized to enable students to&nbsp;iterate on their final projects as soon as possible, with technical material in the first half of the class and entrepreneurial considerations&nbsp;in the second half. Introduction and Quickstart Tools: VMs, IAAS/PAAS, Unix Command Line, Text Editors, DCVS Frontend: HTML/CSS/JS, Wireframing, Market Research Backend: SSJS, Databases, Frameworks, Data Pipelines APIs: Client-side templating, HTTP, SOA/REST/JSON, API as BizDev Devops: Testing, Deployment, CI, Monitoring, Performance Dev Scaling: DRY, Reading/Reviewing/Documenting Code, Parallelizing Founding: Conception, Composition, Capitalization Business Scaling: Promotion, CAC/LTV/Funnel, Regulation, Accounting Summary and Demo Week Spiritual sequel to Peter Thiel's CS183 course on startups. Bridges the gap between academic computer science and production software engineering. Fast-paced introduction to key tools and techniques (command line, dotfiles, text editor, distributed version control, debugging, testing, documentation, reading code, deployments), featuring guest appearances by senior engineers from successful startups and large-scale academic projects. Over the course of the class, students will build a command line application, expose it as a web service, and then link other students' applications and services together to build an HTML5 mobile app. General principles are illustrated through modern Javascript and the latest web technologies, including Node, Backbone, Coffeescript, Bootstrap, Git, and Github.&nbsp; Learn the engineering skills needed to build a technology startup from the ground up.