Computer Science Digital systems are at the heart of the information age in which we live, allowing us to store, communicate and manipulate information quickly and reliably.  This course is a bottom-up exploration of the abstractions, principles, and techniques used in the design of digital systems. If you have a rudimentary knowledge of electricity and some exposure to programming, roll up your sleeves, join in and design a computer system! This is Part 1 of a 3-part series on digital systems, teaching the fundamentals of digital circuit design and is based on a course offered by the MIT Department of Electrical Engineering and Computer Science. Topics include digital encoding of information, principles of digital signaling; combinational and sequential logic, implementation in CMOS, useful canonical forms, synthesis; latency, throughput and pipelining. Using your browser for design entry and simulation, you’ll get to design and debug circuits at both the transistor- and gate-level, culminating in the creation of a 32-bit arithmetic and logic unit. There’s also an optional design challenge where you can earn extra points towards your final score! The fundamentals of digital circuit design Basics of digital encoding and digital signaling Basics of combinational and sequential logic How to implement CMOS circuits How to design and debug circuits at the transistor and gate level How to create a 32-bit arithmetic and logic unit